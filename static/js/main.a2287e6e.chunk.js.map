{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","src","alt","sectionTitle","titles","startDate","endDate","title","venue","accomplishments","map","workExperience","idx","Experiences","Object","assign","key","href","_ref","experience","Experience","_ref2","ExperienceHeader","Accomplishments","_ref3","_ref4","accomplishment","Accomplishment","_ref5","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2287e6e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nfunction App() {\n\n  const workExperiences = [\n    {\n      sectionTitle:'experience',\n      titles:[\n        {\n          startDate:'May 2018',\n          endDate:'present',\n          title:'full stack developer',\n          venue:'magicpin',\n          accomplishments:[\n            'Working in merchant product team responsible for engagement and retention of acquired merchants.',\n            'Work involves development of new features as well as supporting already existing code base. From UI in React, Redux and Thunk to creation of wrapper APIs in expressJS I work on react, express, django and go.',\n            'Responsible for managing complete software development lifecycle using jira, pentaho and agile methodology.',\n            'Writing backend APIs for data retrival from various date sources including mysql, cassandra elastic and solr.',\n            'Creation and monitoring business analytics funnels using google analytics and home grown graphing system.',\n            'Management of merchant crons for sending business summary mails using python and Jinja2.',\n            'Management and optimisation of bi monthly customer wallet summary mailer (5 M users).'\n          ]\n        },\n        {\n          startDate:'Feb 2018',\n          endDate:'May 2018',\n          title:'full stack developer',\n          venue:'mountblue technologies',\n          accomplishments:[\n            'Worked on HTML, CSS, Javascript, JQuery, Python, React and Django.',\n            'Work involved development of end to end full stack apps.',\n            'Freelanching in Django.',\n            'Bootstrapped API server for Mitra robotics completely written in Django. Integrated Microsoft\\'s face recognition API and Twilio API for sending and receiving SMS\\'.'\n          ]\n        },\n        {\n          startDate:'Aug 2017',\n          endDate:'Nov 2017',\n          title:'SAP Basis administrator',\n          venue:'IBM',\n          accomplishments:[\n            'Worked on SAP basis details administering monitor systems.',\n            'Learned effective usage of UNIX and Linux tools to manage netorking and disk spaces among other things.'\n          ]\n        }\n      ]\n    },\n    {\n      sectionTitle:'education',\n      titles:[\n        {\n          startDate:'Aug 2013',\n          endDate:'Apr 2017',\n          title:'B.Tech in Information Technology, ( 7.32 CGPA )',\n          venue:'Indian Institute of Information Technology Allahabad',\n          accomplishments:[\n            'Completed subject projects in Algorithms, Compiler Design, Web Development, Database management and Object Oriented programming',\n            'Mini projects in Machine learning and Data Compression'\n          ]\n        },\n        {\n          startDate:'Apr 2011',\n          endDate:'Mar 2012',\n          title:'Intermediate, ( 82.05% )',\n          venue:'Jawahar Navodaya Vidyalaya Mariahu Jaunpur',\n          accomplishments:[\n            'Studied physics, chemistry, maths, english, hindi and art as optional subject.',\n          ]\n        },\n        {\n          startDate:'Apr 2009',\n          endDate:'Mar 2010',\n          title:'High School, ( 93.1% )',\n          venue:'Jawahar Navodaya Vidyalaya Mariahu Jaunpur',\n          accomplishments:[\n            'Studied maths, science, social studies, english and hindi'\n          ]\n        }\n      ]\n    }\n  ]\n  return (\n    <div className=\"App\">\n      <header>\n      </header>\n      <main className=\"main-wrapper\">\n          <section className=\"left-section\">\n            <article className=\"user-info-wrapper\">\n              <img src=\"\" alt=\"\" className=\"profile-pic\"/>\n              <div className=\"user-info\">\n                <div className=\"user-name\">\n                  Amit Gautam\n                </div>\n                <div className=\"user-title\">\n                  Software Developer\n                </div>\n              </div>\n            </article>\n            {workExperiences.map((workExperience, idx)=><Experiences key={idx} {...workExperience}/>)}\n          </section>\n          <section className=\"right-section\">\n            <article className=\"user-address\">\n              <div className=\"section-top\">\n                <div className=\"section-icon\"></div>\n                <span className=\"section-title\">Personal Info</span>\n\n              </div>\n              <div className=\"section-content\">\n                <strong><i className=\"fa fa-address-card\"></i>Address</strong>\n                Goriapur, Nauperwa, Jaunpur UP 222109\n              </div>\n              <div className=\"section-content\">\n                <strong><i className=\"fa fa-phone\"></i>Phone</strong>\n                <tel>+91-9695790396</tel>\n              </div>\n              <div className=\"section-content\">\n                <strong><i className=\"fa fa-envelope\"></i>E-mail</strong>\n                <email>gautamamits95@gmail.com</email>\n              </div>\n              <div className=\"section-content\">\n                <strong><i className=\"fa fa-calendar\"></i>Date of Birth</strong>\n                May 10, 1995\n              </div>\n              <div className=\"section-content\">\n                <strong><i className=\"fa fa-linkedin\"></i>LinkedIn</strong>\n                <a href=\"https://www.linkedin.com/in/gautamits\">https://www.linkedin.com/in/gautamits</a>\n              </div>\n            </article>\n          </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Experiences({sectionTitle, titles}){\n  return (\n    <div className=\"experiences\">\n      <div className=\"experiences-title\">\n        {sectionTitle}\n        \n      </div>\n      <div className=\"experiences-body\">\n        {titles.map((experience, idx)=><Experience experience={experience} key={idx}/>)}\n      </div>\n    </div>\n  )\n}\n\nfunction Experience({experience}){\n  return (\n    <div className=\"experience\">\n      <ExperienceHeader {...experience}/>\n      <Accomplishments {...experience}/>\n    </div>\n  )\n}\n\nfunction ExperienceHeader({startDate, endDate, venue, title}){\n  return (\n    <div className=\"profile-header\">\n      <div className=\"left-experience\">\n        {startDate} - {endDate}\n      </div>\n      <div className=\"right-experience\">\n        <div className=\"experience-title\">\n          {title}\n        </div>\n        <div className=\"experience-venue\">\n          {venue}, Technology\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Accomplishments({accomplishments}){\n  return (\n    <div className=\"accomplishments\">\n      <ul>\n        {accomplishments.map((accomplishment, idx)=><Accomplishment accomplishment={accomplishment} key={idx}/>)}\n      </ul>\n    </div>\n  )\n}\n\nfunction Accomplishment({accomplishment}){\n  return <li className=\"accomplishment\">{accomplishment}</li>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}